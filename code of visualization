import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Load data
data = pd.read_csv('https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-DV0101EN-SkillsNetwork/Data%20Files/historical_automobile_sales.csv')

# Convert 'Date' to datetime
data['Date'] = pd.to_datetime(data['Date'])
data['Year'] = data['Date'].dt.year

# Filter recession and non-recession
recession_data = data[data['Recession'] == 1]
non_recession_data = data[data['Recession'] == 0]

# TASK 1.1 - Line Chart: Automobile sales per year
plt.figure(figsize=(10, 5))
sales_per_year = data.groupby('Year')['Automobile_Sales'].sum()
sales_per_year.plot(title="Automobile Sales Per Year", marker='o')
plt.xlabel("Year")
plt.ylabel("Sales")
plt.grid(True)
plt.show()

# TASK 1.2 - Multiple lines per vehicle type
plt.figure(figsize=(10, 6))
for vehicle in data['Vehicle_Type'].unique():
    yearly = data[data['Vehicle_Type'] == vehicle].groupby('Year')['Automobile_Sales'].sum()
    plt.plot(yearly.index, yearly.values, label=vehicle)
plt.title("Sales Trend by Vehicle Type")
plt.xlabel("Year")
plt.ylabel("Sales")
plt.legend()
plt.grid(True)
plt.show()

# TASK 1.3 - Seaborn comparison recession vs non-recession
plt.figure(figsize=(12, 6))
sns.lineplot(data=data, x="Year", y="Automobile_Sales", hue="Vehicle_Type", style="Recession")
plt.title("Sales Trend Comparison by Vehicle Type: Recession vs Non-Recession")
plt.show()

# TASK 1.4 - Subplots for GDP variation
fig, axes = plt.subplots(nrows=1, ncols=2, figsize=(14, 6), sharey=True)
recession_gdp = recession_data.groupby('Year')['GDP'].mean()
non_recession_gdp = non_recession_data.groupby('Year')['GDP'].mean()

axes[0].plot(recession_gdp.index, recession_gdp.values, marker='o', color='red')
axes[0].set_title('GDP During Recession')
axes[0].set_xlabel('Year')
axes[0].set_ylabel('GDP')

axes[1].plot(non_recession_gdp.index, non_recession_gdp.values, marker='o', color='green')
axes[1].set_title('GDP During Non-Recession')
axes[1].set_xlabel('Year')

plt.tight_layout()
plt.show()

# TASK 1.5 - Bubble plot: Seasonality impact
plt.figure(figsize=(12, 6))
plt.scatter(data['Month'], data['Automobile_Sales'], s=data['Seasonality_Weight']*500, alpha=0.5)
plt.title("Seasonality Impact on Automobile Sales")
plt.xlabel("Month")
plt.ylabel("Automobile Sales")
plt.grid(True)
plt.show()

# TASK 1.6 - Scatter plot: Vehicle Price vs Sales (recession)
plt.figure(figsize=(10, 6))
plt.scatter(recession_data['Price'], recession_data['Automobile_Sales'], alpha=0.6)
plt.title("Price vs Sales Volume During Recession")
plt.xlabel("Average Price")
plt.ylabel("Automobile Sales")
plt.grid(True)
plt.show()

# TASK 1.7 - Pie chart: Ad expenditure in recession vs non-recession
ad_exp = [recession_data['Advertising_Expenditure'].sum(),
          non_recession_data['Advertising_Expenditure'].sum()]
labels = ['Recession', 'Non-Recession']
plt.figure(figsize=(6, 6))
plt.pie(ad_exp, labels=labels, autopct='%1.1f%%', startangle=90)
plt.title("Ad Expenditure: Recession vs Non-Recession")
plt.show()

# TASK 1.8 - Pie chart: Ad expenditure by vehicle type (recession)
recession_ad_by_type = recession_data.groupby('Vehicle_Type')['Advertising_Expenditure'].sum()
plt.figure(figsize=(8, 8))
plt.pie(recession_ad_by_type, labels=recession_ad_by_type.index, autopct='%1.1f%%')
plt.title("Ad Spend by Vehicle Type During Recession")
plt.show()

# TASK 1.9 - Line plot: Unemployment vs Sales by vehicle type during recession
plt.figure(figsize=(12, 6))
for vehicle in recession_data['Vehicle_Type'].unique():
    subset = recession_data[recession_data['Vehicle_Type'] == vehicle]
    plt.plot(subset['Unemployment_Rate'], subset['Automobile_Sales'], label=vehicle, marker='o')
plt.title("Unemployment Rate vs Sales During Recession")
plt.xlabel("Unemployment Rate")
plt.ylabel("Automobile Sales")
plt.legend()
plt.grid(True)
plt.show()
